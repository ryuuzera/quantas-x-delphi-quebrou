import Head from 'next/head';
import { parseCookies, setCookie } from 'nookies';
import { useEffect, useState } from 'react';
import styles from '../styles/Home.module.css';

const bg = '/background.jpg';

export default function Home() {
  const cookies = parseCookies();
  const [count, setCount] = useState(0);

  useEffect(() => {
    if (parseInt(cookies.COUNT) > 0) {
      setCount(parseInt(cookies.COUNT));
    }
  }, []);
  const handleClick = () => {
    setCount((count as number) + 1);
    setCookie(null, 'COUNT', (count + 1).toString(), {
      maxAge: 30 * 99996 * 99999 * 99999,
      path: '/',
    });
  };

  return (
    <>
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name='description' content='Generated by create next app' />
          <link rel='icon' href='/favicon.ico' />
        </Head>
        <main className={styles.main}>
          <div className={styles.topBar}>
            <div className={styles.dot} />
          </div>
          <div className={styles.window}>
            <div className={styles.title}>
              <h1>Quantas vezes o Delphi 6 travou?</h1>
            </div>
            <div className={styles.content}>
              <div className={styles.counter}>
                <h1>{count}</h1>
              </div>
              <div className={styles.buttonDiv}>
                <button className={styles.travou} onClick={() => handleClick()}>
                  Travou
                </button>
              </div>

              <div className={styles.progress}>
                <div className={styles.progressBar}>
                  <progress value={count} max={100} />
                </div>
                <h2>Nivel de Ã“dio</h2>
              </div>
            </div>
          </div>
        </main>
      </div>
      <style jsx global>
        {`
          body {
            background: url(${bg});
            background-repeat: no-repeat;
            background-size: cover;
            width: 100vw;
            height: 100vh;
            backdrop-filter: blur(8px);
            overflow: hidden;
          }
        `}
      </style>
      <style jsx>
        {`
          .main {
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(6.4px);
            -webkit-backdrop-filter: blur(6.4px);
          }
        `}
      </style>
    </>
  );
}
